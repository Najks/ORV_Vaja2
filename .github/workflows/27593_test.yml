name: Testiranje Python Projekta

on:
  push:
    branches: [main]

jobs:
  setup-environment:
    name: Priprava Okolja
    runs-on: self-hosted
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
    outputs:
      environment_ok: ${{ steps.check_error.outputs.success }}

    steps:
      - run: git clone https://github.com/actions/checkout.git
        name: Checkout Repository

      - run: |
          sudo apt-get update
          sudo apt-get install python3-pip -y
          python -m pip install --upgrade pip
          pip install pytest numpy opencv-python-headless
        name: Nastavi Python

      - run: echo "Preverjanje napak..." && false > napaka.txt 2>&1 || echo "::set-output name=success::true"
        name: Preveri napake in zapiÅ¡i v napaka.txt

      - run: |
          if [ -f napaka.txt ]; then
            echo "Opozorilo: Napaka pri pripravi okolja, vendar nadaljujemo z izvajanjem testov."
            cat napaka.txt
          fi
        name: Preveri prisotnost napake (ne vpliva na izvajanje testov)

  run-tests:
    name: Izvajanje Testov
    runs-on: self-hosted
    needs: setup-environment
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']

    steps:
      - run: git clone https://github.com/actions/checkout.git
        name: Checkout Repository

      - run: |
          sudo apt-get update
          sudo apt-get install python3-pip -y
          python -m pip install --upgrade pip
          pip install pytest numpy opencv-python-headless
        name: Nastavi Python

      - run: |
          pytest testiranje.py --python_version=${{ matrix.python-version }}
          pytest testiranje.py --python_version=${{ matrix.python-version }}
        name: Izvedi teste z pytest

  deploy:
    name: Deploy Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: run-tests
    if: ${{ needs.run-tests.result == 'success' }}

    steps:
      - run: git clone https://github.com/actions/checkout.git
        name: Checkout Repository

      - run: echo "BUILD_DATE=$(date +'%Y-%m-%d-%H-%M')" >> $GITHUB_ENV
        name: Set Build Date

      - run: docker build . --file Dockerfile --tag najks/"nevem kaj pride sem":latest
        name: Zgradnja Docker slike

      - run: docker push najks/nekaj
        name: Potisni Docker sliko
